@model CobanaEnergy.Project.Models.Signup.UserProfileViewModel
@{
    ViewBag.Title = "User Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (User.Identity.IsAuthenticated)
{
    <div class="create-user-container">
        <div class="form-container">
            <h2 class="form-heading">My Profile</h2>

            @using (Html.BeginForm("UpdateProfile", "Account", FormMethod.Post, new { id = "profileForm", @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.TextBoxFor(m => m.UserName, new
                    {
                        @class = "form-control",
                        placeholder = "Username",
                        @readonly = "readonly",
                        title = "Username cannot be changed"
                    })
                </div>

                <div class="form-group">
                    @Html.TextBoxFor(m => m.Email, new
                    {
                        @class = "form-control",
                        placeholder = "Enter your email address",
                        type = "email"
                    })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.TextBoxFor(m => m.JobTitle, new
                    {
                        @class = "form-control",
                        placeholder = "Enter your job title",
                        maxlength = "50"
                    })
                    @Html.ValidationMessageFor(m => m.JobTitle, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.TextBoxFor(m => m.ExtensionNumber, new
                    {
                        @class = "form-control",
                        placeholder = "Enter your extension number",
                        pattern = "^[0-9]*$",
                        title = "Only numbers allowed",
                        maxlength = "10"
                    })
                    @Html.ValidationMessageFor(m => m.ExtensionNumber, "", new { @class = "text-danger" })
                </div>

                <button type="submit" class="btn btn-primary mt-2">Update Profile</button>
            }
        </div>
    </div>

    @section scripts {
        @if (TempData["ToastMessage"] != null)
        {
            <script>
                $(function () {
                    const message = "@TempData["ToastMessage"]";
                    const type = "@TempData["ToastType"]";

                    if (type === "success") {
                        showToastSuccess(message);
                    } else if (type === "error") {
                        showToastError(message);
                    }
                });
            </script>
        }

        <script src="~/Scripts/Signup/userProfile.js"></script>
    }

    @section styles {
        <link href="~/Content/Signup/CreateUser.css" rel="stylesheet" />
    }
}
else
{
    <div class="alert alert-danger text-center mt-5">
        <h4>Access Denied</h4>
        <p>Please log in to view your profile.</p>
    </div>
}
